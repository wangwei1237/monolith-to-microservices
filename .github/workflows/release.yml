name: Build & Release GitBook
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'The release version of the gitbook, such as v1.1.1'
        required: true
        default: 'v1.1.0'

env:
  DEBIAN_FRONTEND: noninteractive

jobs:
  get-upload-url:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: sudo sh -x ./getuploadurl.sh ${{ github.event.inputs.version }} ${{ secrets.GITHUB_TOKEN }} | xargs -I {} echo "upload-url={}" >> $GITHUB_OUTPUT
        id: step-upload-url
    outputs:
      upload-url: ${{ steps.step-upload-url.outputs.upload-url }}  
  
  build:
    needs: [get-upload-url]
    name: Build & Release
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js 10.x
        uses: actions/setup-node@v2
        with:
          node-version: "10.22.0"
      - name: Setup gitbook
        run: | 
          echo ${{ needs.get-upload-url.outputs.upload-url }}
          npm install -g npm@8.0.0
          npm install -g gitbook-cli
      - name: Checkout main source
        uses: actions/checkout@v2
      - name: Build the book
        working-directory: ${{ github.workspace }}
        run: |
          mkdir node_modules && cd node_modules && npm install gitbook-plugin-sitemap-general && cd .. 
          gitbook install
          cp -r misc/gitbook-plugin-hints/* node_modules/gitbook-plugin-hints/
          cp misc/tbfed-pagefooter_index.js node_modules/gitbook-plugin-tbfed-pagefooter/index.js
          gitbook build      
      - name: package the book
        working-directory: ${{ github.workspace }}
        run: |
          mv _book monolith-to-microservices && tar czvf monolith-to-microservices.tar.gz monolith-to-microservices/*
          ls .
      - name: Get commit message (for release title and body)
        id: commit
        uses: kceb/git-message-action@v1
      - name: Get release title and body
        id: release
        run: |
          RELEASE_TITLE=$(echo "${{ steps.commit.outputs.git-message }}" | head -n 1)
          echo "::set-output name=title::$RELEASE_TITLE"
          RELEASE_BODY=$(echo "${{ steps.commit.outputs.git-message }}" | tail -n $(expr $(echo "${{ steps.commit.outputs.git-message }}" | wc -l) - 1))
          echo "::set-output name=body::$RELEASE_BODY"
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.get-upload-url.outputs.upload-url }}
          asset_path: monolith-to-microservices.tar.gz
          asset_name: monolith-to-microservices.tar.gz
          asset_content_type: application/octet-stream
      - name: trigger the wangwei1237.github.io_src deploy
        run: | 
          curl -X POST \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token ${{ secrets.TOKEN }}" \
          https://api.github.com/repos/wangwei1237/wangwei1237.github.io_src/dispatches \
          -d '{"event_type":"update", "client_payload":{"from": "${{ github.repository }}", "msg": "${{ steps.release.outputs.title }} ${{ steps.release.outputs.body }}"}}'
